VARTYPE	int
IDENTIFIER	add
LPAREN	
VARTYPE	int
IDENTIFIER	a
COMMA	
VARTYPE	int
IDENTIFIER	b
RPAREN	
LBRACKET	
VARTYPE	int
IDENTIFIER	c
SEMICOLON	
IDENTIFIER	c
ASSIGNMENT_OPERATION	
IDENTIFIER	a
ADD_OPERATION	
IDENTIFIER	b
SEMICOLON	
RETURN	return
IDENTIFIER	c
SEMICOLON	
RBRACKET	
VARTYPE	int
IDENTIFIER	add10
LPAREN	
VARTYPE	int
IDENTIFIER	a
RPAREN	
LBRACKET	
VARTYPE	int
IDENTIFIER	c
ASSIGNMENT_OPERATION	
INTEGER	10
SEMICOLON	
WHILE	while
LPAREN	
IDENTIFIER	c
COMPARISON_OPERATION	!=
INTEGER	0
RPAREN	
LBRACKET	
IDENTIFIER	a
ASSIGNMENT_OPERATION	
IDENTIFIER	a
ADD_OPERATION	
INTEGER	1
SEMICOLON	
IDENTIFIER	c
ASSIGNMENT_OPERATION	
IDENTIFIER	c
SUB_OPERATION	
INTEGER	1
SEMICOLON	
RBRACKET	
RETURN	return
IDENTIFIER	a
SEMICOLON	
RBRACKET	
VARTYPE	int
IDENTIFIER	main
LPAREN	
VARTYPE	int
IDENTIFIER	arg1
COMMA	
VARTYPE	char
IDENTIFIER	arg2
RPAREN	
LBRACKET	
VARTYPE	int
IDENTIFIER	a
COMMA	
IDENTIFIER	b
SEMICOLON	
VARTYPE	int
IDENTIFIER	c
SEMICOLON	
VARTYPE	char
IDENTIFIER	str
SEMICOLON	
IDENTIFIER	a
ASSIGNMENT_OPERATION	
INTEGER	10
SEMICOLON	
IDENTIFIER	b
ASSIGNMENT_OPERATION	
INTEGER	20
SEMICOLON	
IDENTIFIER	c
ASSIGNMENT_OPERATION	
IDENTIFIER	add
LPAREN	
IDENTIFIER	a
COMMA	
IDENTIFIER	b
RPAREN	
SEMICOLON	
IF	if
LPAREN	
IDENTIFIER	c
COMPARISON_OPERATION	>
INTEGER	10
RPAREN	
LBRACKET	
IDENTIFIER	str
ASSIGNMENT_OPERATION	
LITERAL	A
SEMICOLON	
RBRACKET	
ELSE	else
IDENTIFIER	str
ASSIGNMENT_OPERATION	
LITERAL	B
SEMICOLON	
IDENTIFIER	a
ASSIGNMENT_OPERATION	
IDENTIFIER	add10
LPAREN	
IDENTIFIER	a
RPAREN	
SEMICOLON	
RBRACKET	
